import { promises as fs } from 'fs';
import { resolve } from 'path';
import { arch, platform } from 'process';
const MANIFEST_VERSION = 1;
export const createManifest = async ({ featureFlags, functions, path, }) => {
    const formattedFunctions = functions.map((func) => formatFunctionForManifest(func, featureFlags));
    const payload = {
        functions: formattedFunctions,
        system: { arch, platform },
        timestamp: Date.now(),
        version: MANIFEST_VERSION,
    };
    await fs.writeFile(path, JSON.stringify(payload));
};
const formatFunctionForManifest = ({ bundler, displayName, generator, invocationMode, mainFile, name, path, runtime, runtimeVersion, schedule, }, featureFlags) => ({
    bundler,
    displayName,
    generator,
    invocationMode,
    mainFile,
    name,
    runtimeVersion: featureFlags.functions_inherit_build_nodejs_version ? runtimeVersion : undefined,
    path: resolve(path),
    runtime,
    schedule,
});
//# sourceMappingURL=manifest.js.map