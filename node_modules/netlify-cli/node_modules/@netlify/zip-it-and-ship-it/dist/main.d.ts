import { Config } from './config.js';
import { FeatureFlags } from './feature_flags.js';
import { RuntimeName } from './runtimes/runtime.js';
export { Config, FunctionConfig } from './config.js';
export { zipFunction, zipFunctions, ZipFunctionOptions, ZipFunctionsOptions } from './zip.js';
export { ArchiveFormat, ARCHIVE_FORMAT } from './archive.js';
export { NodeBundlerName, NODE_BUNDLER } from './runtimes/node/bundlers/types.js';
export { RuntimeName, RUNTIME } from './runtimes/runtime.js';
export { ModuleFormat, MODULE_FORMAT } from './runtimes/node/utils/module_format.js';
export interface ListedFunction {
    name: string;
    mainFile: string;
    runtime: RuntimeName;
    extension: string;
    runtimeAPIVersion?: number;
    schedule?: string;
    displayName?: string;
    generator?: string;
}
type ListedFunctionFile = ListedFunction & {
    srcFile: string;
};
interface ListFunctionsOptions {
    basePath?: string;
    config?: Config;
    configFileDirectories?: string[];
    featureFlags?: FeatureFlags;
    parseISC?: boolean;
}
export declare const listFunctions: (relativeSrcFolders: string | string[], { featureFlags: inputFeatureFlags, config, configFileDirectories, parseISC, }?: {
    featureFlags?: Partial<Record<"buildRustSource" | "parseWithEsbuild" | "traceWithNft" | "functions_inherit_build_nodejs_version" | "zisi_log_dynamic_imports" | "zisi_pure_esm" | "zisi_pure_esm_mjs" | "zisi_output_cjs_extension" | "zisi_functions_api_v2" | "zisi_unique_entry_file", boolean>> | undefined;
    config?: Config | undefined;
    configFileDirectories?: string[] | undefined;
    parseISC?: boolean | undefined;
}) => Promise<ListedFunction[]>;
export declare const listFunction: (path: string, { featureFlags: inputFeatureFlags, config, configFileDirectories, parseISC, }?: {
    featureFlags?: Partial<Record<"buildRustSource" | "parseWithEsbuild" | "traceWithNft" | "functions_inherit_build_nodejs_version" | "zisi_log_dynamic_imports" | "zisi_pure_esm" | "zisi_pure_esm_mjs" | "zisi_output_cjs_extension" | "zisi_functions_api_v2" | "zisi_unique_entry_file", boolean>> | undefined;
    config?: Config | undefined;
    configFileDirectories?: string[] | undefined;
    parseISC?: boolean | undefined;
}) => Promise<ListedFunction | undefined>;
export declare const listFunctionsFiles: (relativeSrcFolders: string | string[], { basePath, config, configFileDirectories, featureFlags: inputFeatureFlags, parseISC, }?: ListFunctionsOptions) => Promise<ListedFunctionFile[]>;
